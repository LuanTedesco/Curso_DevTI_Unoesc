{"ast":null,"code":"import { FuncionarioDTO } from 'src/app/models/funcionario.dto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class CadastroComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.createForm(new FuncionarioDTO());\n  }\n  createForm(cliente) {\n    this.formCliente = this.formBuilder.group({\n      nome: [cliente.nome],\n      tipo: [cliente.tipo],\n      genero: [cliente.genero],\n      dataNascimento: [cliente.dataNascimento],\n      observacao: [cliente.observacao],\n      inativo: [cliente.inativo]\n    });\n  }\n  onSubmit() {\n    // aqui você pode implementar a logica para fazer seu formulário salvar\n    console.log(this.formCliente.value);\n    // Usar o método reset para limpar os controles na tela\n    this.formCliente.reset(new FuncionarioDTO());\n  }\n}\nCadastroComponent.ɵfac = function CadastroComponent_Factory(t) {\n  return new (t || CadastroComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nCadastroComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CadastroComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 39,\n  vars: 2,\n  consts: [[1, \"form-group\"], [\"for\", \"nome\"], [\"type\", \"text\", \"name\", \"nome\", \"id\", \"nome\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"tipo\"], [\"name\", \"tipo\", \"id\", \"tipo\", 1, \"form-control\"], [\"value\", \"1\"], [\"value\", \"2\"], [1, \"form-check\"], [\"type\", \"radio\", \"name\", \"genero\", \"id\", \"masculino\", 1, \"form-check-input\", 3, \"value\"], [\"for\", \"masculino\", 1, \"form-check-label\"], [\"type\", \"radio\", \"name\", \"genero\", \"id\", \"feminino\", 1, \"form-check-input\", 3, \"value\"], [\"for\", \"feminino\", 1, \"form-check-label\"], [\"for\", \"dataNascimento\"], [\"type\", \"date\", \"name\", \"dataNascimento\", \"id\", \"dataNascimento\", 1, \"form-control\"], [\"for\", \"observacao\"], [\"rows\", \"3\", \"name\", \"observacao\", \"id\", \"observacao\", 1, \"form-control\"], [\"type\", \"checkbox\", \"name\", \"inativo\", \"id\", \"inativo\", 1, \"form-check-input\"], [\"for\", \"inativo\", 1, \"form-check-label\"], [\"type\", \"submit\", \"value\", \"Salvar\", 1, \"btn\", \"btn-primary\", \"mt-4\"], [\"href\", \"#\", 1, \"btn\", \"btn-secondary\", \"mt-4\", \"ml-2\"]],\n  template: function CadastroComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"div\", 0)(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Nome\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 0)(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Tipo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"select\", 4)(9, \"option\", 5);\n      i0.ɵɵtext(10, \"Pessoa f\\u00EDsica\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"option\", 6);\n      i0.ɵɵtext(12, \"Pessoa jur\\u00EDdica\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"div\", 0)(14, \"label\");\n      i0.ɵɵtext(15, \"G\\u00EAnero\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 7);\n      i0.ɵɵelement(17, \"input\", 8);\n      i0.ɵɵelementStart(18, \"label\", 9);\n      i0.ɵɵtext(19, \"Masculino\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 7);\n      i0.ɵɵelement(21, \"input\", 10);\n      i0.ɵɵelementStart(22, \"label\", 11);\n      i0.ɵɵtext(23, \"Feminino\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"div\", 0)(25, \"label\", 12);\n      i0.ɵɵtext(26, \"Data de nascimento\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 0)(29, \"label\", 14);\n      i0.ɵɵtext(30, \"Observa\\u00E7\\u00E3o\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"textarea\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"div\", 7);\n      i0.ɵɵelement(33, \"input\", 16);\n      i0.ɵɵelementStart(34, \"label\", 17);\n      i0.ɵɵtext(35, \"Inativo\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(36, \"input\", 18);\n      i0.ɵɵelementStart(37, \"a\", 19);\n      i0.ɵɵtext(38, \"Cancelar\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"value\", 1);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", 2);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,cAAc,QAAQ,gCAAgC;;;AAQ/D,OAAM,MAAOC,iBAAiB;EAE1BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;EAAgB;EAEjDC,QAAQ;IACN,IAAI,CAACC,UAAU,CAAC,IAAIL,cAAc,EAAE,CAAC;EACvC;EAEAK,UAAU,CAACC,OAAuB;IAC/B,IAAI,CAACC,WAAW,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACzCC,IAAI,EAAE,CAACH,OAAO,CAACG,IAAI,CAAC;MACpBC,IAAI,EAAE,CAACJ,OAAO,CAACI,IAAI,CAAC;MACpBC,MAAM,EAAE,CAACL,OAAO,CAACK,MAAM,CAAC;MACxBC,cAAc,EAAE,CAACN,OAAO,CAACM,cAAc,CAAC;MACxCC,UAAU,EAAE,CAACP,OAAO,CAACO,UAAU,CAAC;MAChCC,OAAO,EAAE,CAACR,OAAO,CAACQ,OAAO;KAC1B,CAAC;EACJ;EAGAC,QAAQ;IACN;IACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,WAAW,CAACW,KAAK,CAAC;IAEnC;IACA,IAAI,CAACX,WAAW,CAACY,KAAK,CAAC,IAAInB,cAAc,EAAE,CAAC;EAC9C;;AA1BWC,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX9BC,4BAAM;MAGoBA,oBAAI;MAAAA,iBAAQ;MAC9BA,2BAAuE;MAC3EA,iBAAM;MAENA,8BAAwB;MACFA,oBAAI;MAAAA,iBAAQ;MAC9BA,iCAAmD;MAC7BA,mCAAa;MAAAA,iBAAS;MACxCA,kCAAkB;MAAAA,qCAAe;MAAAA,iBAAS;MAIlDA,+BAAwB;MACbA,4BAAM;MAAAA,iBAAQ;MAErBA,+BAAwB;MACpBA,4BAAsF;MACtFA,iCAAgD;MAAAA,0BAAS;MAAAA,iBAAQ;MAErEA,+BAAwB;MACpBA,6BAAqF;MACrFA,kCAA+C;MAAAA,yBAAQ;MAAAA,iBAAQ;MAIvEA,+BAAwB;MACQA,mCAAkB;MAAAA,iBAAQ;MACtDA,6BAAkF;MACtFA,iBAAM;MAENA,+BAAwB;MACIA,qCAAU;MAAAA,iBAAQ;MAC1CA,gCAAqF;MACzFA,iBAAM;MAENA,+BAAwB;MACpBA,6BAA4E;MAC5EA,kCAA8C;MAAAA,wBAAO;MAAAA,iBAAQ;MAGjEA,6BAAiE;MACjEA,8BAAgD;MAAAA,yBAAQ;MAAAA,iBAAI;;;MAzBsBA,gBAAW;MAAXA,yBAAW;MAIZA,eAAW;MAAXA,yBAAW","names":["FuncionarioDTO","CadastroComponent","constructor","formBuilder","ngOnInit","createForm","cliente","formCliente","group","nome","tipo","genero","dataNascimento","observacao","inativo","onSubmit","console","log","value","reset","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\Dsv-git\\funcionarios-web\\src\\app\\modules\\Funcionario\\cadastro\\page\\cadastro.component.ts","D:\\Dsv-git\\funcionarios-web\\src\\app\\modules\\Funcionario\\cadastro\\page\\cadastro.component.html"],"sourcesContent":["\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { FuncionarioDTO } from 'src/app/models/funcionario.dto';\r\n\r\n\r\n\r\n@Component({\r\n    templateUrl: './cadastro.component.html',\r\n    styleUrls: ['./cadastro.component.scss']\r\n})\r\nexport class CadastroComponent implements OnInit {\r\n      formCliente!: FormGroup;\r\n    constructor(private formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.createForm(new FuncionarioDTO());\r\n  }\r\n\r\n  createForm(cliente: FuncionarioDTO) {\r\n     this.formCliente = this.formBuilder.group({\r\n      nome: [cliente.nome],\r\n      tipo: [cliente.tipo],\r\n      genero: [cliente.genero],\r\n      dataNascimento: [cliente.dataNascimento],\r\n      observacao: [cliente.observacao],\r\n      inativo: [cliente.inativo]\r\n    })\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    // aqui você pode implementar a logica para fazer seu formulário salvar\r\n    console.log(this.formCliente.value);\r\n\r\n    // Usar o método reset para limpar os controles na tela\r\n    this.formCliente.reset(new FuncionarioDTO());\r\n  }\r\n\r\n}\r\n","<form>\r\n\r\n    <div class=\"form-group\">\r\n        <label for=\"nome\">Nome</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"nome\" id=\"nome\" required>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label for=\"tipo\">Tipo</label>\r\n        <select class=\"form-control\" name=\"tipo\" id=\"tipo\">\r\n            <option value=\"1\">Pessoa física</option>\r\n            <option value=\"2\">Pessoa jurídica</option>\r\n        </select>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label>Gênero</label>\r\n\r\n        <div class=\"form-check\">\r\n            <input class=\"form-check-input\" type=\"radio\" name=\"genero\" id=\"masculino\" [value]=\"1\">\r\n            <label class=\"form-check-label\" for=\"masculino\">Masculino</label>\r\n        </div>\r\n        <div class=\"form-check\">\r\n            <input class=\"form-check-input\" type=\"radio\" name=\"genero\" id=\"feminino\" [value]=\"2\">\r\n            <label class=\"form-check-label\" for=\"feminino\">Feminino</label>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label for=\"dataNascimento\">Data de nascimento</label>\r\n        <input type=\"date\" class=\"form-control\" name=\"dataNascimento\" id=\"dataNascimento\">\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label for=\"observacao\">Observação</label>\r\n        <textarea class=\"form-control\" rows=\"3\" name=\"observacao\" id=\"observacao\"></textarea>\r\n    </div>\r\n\r\n    <div class=\"form-check\">\r\n        <input class=\"form-check-input\" type=\"checkbox\" name=\"inativo\" id=\"inativo\">\r\n        <label class=\"form-check-label\" for=\"inativo\">Inativo</label>\r\n    </div>\r\n\r\n    <input type=\"submit\" class=\"btn btn-primary mt-4\" value=\"Salvar\">\r\n    <a href=\"#\" class=\"btn btn-secondary mt-4 ml-2\">Cancelar</a>\r\n\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}